" Section: General Settings
" --------------------------------------------------
let mapleader = ","
set autowrite
set backspace=indent,eol,start " Set normal backspace behavior
set expandtab
set hlsearch
set history=50
set hidden
set laststatus=2
set list listchars=tab:→\ ,trail:·,nbsp:· " Display chars for whitespace
set noswapfile
set nobackup
set nowritebackup
set number " Set line number
set numberwidth=5
set ruler
set shell=zsh " Set bash as the propmp for Vim
set shiftwidth=2
set shiftround
set showcmd
set splitbelow
set splitright
set tabstop=2
set t_Co=256
let g:jsx_ext_required = 0


" Highlight text that goes long
" https://youtu.be/aHm36-na4-4
highlight ColorColumn ctermbg=DarkCyan
call matchadd('ColorColumn', '\%120v', 100) "set column nr<Paste>


"                              Plugins!
"                     Managed with vim-plug
"                  https://github.com/junegunn/vim-plug
"                  Use PlugInstall to Install Plugins
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" If Plug isn't install install it before running plug#begin
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin()

" UI
Plug 'trevordmiller/nova-vim'
" Plug 'vim-airline/vim-airline'
" Plug 'retorillo/airline-tablemode.vim'
" Plug 'edkolev/tmuxline.vim'               " Make the Tmux bar match Vim
"Plug 'ryanoasis/vim-webdevicons'
"Plug 'junegunn/goyo.vim'
" Plug 'prettier/vim-prettier', {
"  \ 'do': 'npm install',
"  \ 'for': ['javascript', 'typescript', 'css', 'less', 'scss', 'json', 'graphql', 'markdown', 'vue'] }

" Project Navigation
" Plug 'mhinz/vim-grepper'
" Plug 'scrooloose/nerdtree'

" File Naviation
Plug 'jeffkreeftmeijer/vim-numbertoggle'  " Smarter line numbers
"Plug 'haya14busa/incsearch.vim'           " Better search highlighting

" Editing
Plug 'tpope/vim-surround'                 " Change word surroundings
Plug 'tpope/vim-commentary'               " Comments stuff
Plug 'tpope/vim-repeat'
"Plug 'Konfekt/FastFold'
Plug 'editorconfig/editorconfig-vim'

" Git
Plug 'tpope/vim-fugitive'                 " Git stuff in Vim
Plug 'airblade/vim-gitgutter'
" Plug 'junegunn/gv.vim',                   { 'on': 'GV' }

" Tasks
" Plug 'w0rp/ale'                           " Linter

" Autocomplete
" Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
" Plug 'zchee/deoplete-jedi'              " deoplete source for Python
" Plug 'carlitux/deoplete-ternjs', { 'for': ['javascript', 'javascript.jsx'] }
" Plug 'alexlafroscia/deoplete-flow',       { 'branch': 'pass-filename-to-autocomplete' }
" Plug 'zchee/deoplete-go'

" Markdown
Plug 'reedes/vim-pencil'                  " Markdown, Writing
Plug 'godlygeek/tabular',                 { 'for': 'markdown' } " Needed for vim-markdown
Plug 'plasticboy/vim-markdown',           { 'for': 'markdown' }

" HTML
"
" Plug 'othree/html5.vim',                  { 'for': 'html' }
" Plug 'mattn/emmet-vim'                    " Emmet

" CSS
" Plug 'hail2u/vim-css3-syntax',            { 'for': 'css' }

" Sass
" Plug 'cakebaker/scss-syntax.vim'

" Javascript
Plug 'pangloss/vim-javascript',           { 'for': ['javascript', 'javascript.jsx'] }
Plug 'mxw/vim-jsx',                       { 'for': ['javascript', 'javascript.jsx'] }
Plug 'leafgarland/typescript-vim',        { 'for': 'typescript'}
" Plug 'rhysd/npm-debug-log.vim'

" Python
Plug 'klen/python-mode',                  { 'for': 'python' }
Plug 'davidhalter/jedi-vim',              { 'for': 'python' }
Plug 'alfredodeza/pytest.vim',            { 'for': 'python' }

" Go
" Plug 'fatih/vim-go'
" Plug 'nsf/gocode',                        { 'rtp': 'nvim', 'do': './nvim/symlink.sh' }

call plug#end()

" Plugin Configuration
" --------------------------------------------------

" vim-airline
" let g:airline_powerline_fonts = 1 " Enable the patched Powerline fonts

" emmet-vim
let g:user_emmet_leader_key='<C-M>'

let g:user_emmet_settings = {
  \    'html' : {
  \        'quote_char': "'"
  \    }
  \}

" Use deoplete.
" let g:deoplete#enable_at_startup = 1

" Remappings
" --------------------------------------------------
" Leader Commands

" leader-leader : Switch between the last two files
nnoremap <leader><leader> <c-^>
" leader-rv : Reload vimrc
nnoremap <leader>rv :source $MYVIMRC<cr>
" leader-ev : Edit vimrc
nnoremap <leader>ev :e $MYVIMRC<cr>

" Remap : to ;
nnoremap ; :

" NerdTree
nnoremap <leader>nt :NERDTreeToggle %:h<cr>
nnoremap <leader>f: NERDTReeFind<CR>

" Theme
" --------------------------------------------------
set termguicolors
set background=dark
colorscheme nova
